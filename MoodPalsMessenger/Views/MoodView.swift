//
//  MoodView.swift
//  MoodPals
//
//  Created by –ù–∏–∫–∏—Ç–∞ –¢–∏—Ö–æ–Ω—é–∫ on 09.04.2023.
//

import SwiftUI

struct MoodView: View {
    
    let defaults = UserDefaults.standard
    
    enum Mood {
        case none, happy, neutral, sad, angry, sleepy, thoughtful
        var id: Self { self }
    }
    
    @State private var selection: Int? = nil
    @State private var currentMood: Mood = .none
    @State private var isButtonEnabled = false
    
    var body: some View {
        
        VStack(spacing: 20) {
            Text("–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ")
                .font(.largeTitle)
                .fontWeight(.bold)
            Text("–û—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏—Ç —Ç–æ, –∫–∞–∫ –º—ã –æ–±—â–∞–µ–º—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –ª—é–¥—å–º–∏")
                .font(.body)
                .multilineTextAlignment(.center)
                .frame(maxWidth: 260)
                .foregroundColor(.gray)
                .padding(.bottom)
            VStack(spacing: 12) {
                HStack(spacing: 12) {
                    MoodChooseButton(selectedButtonIndex: selection, index: 1, title: "üòÉ", subTitle: "–†–∞–¥–æ—Å—Ç–Ω–æ–µ") {
                        selection = 1
                        currentMood = .happy
                        isButtonEnabled = true
                    }
                    MoodChooseButton(selectedButtonIndex: selection, index: 2, title: "üòê", subTitle: "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ") {
                        selection = 2
                        currentMood = .neutral
                        isButtonEnabled = true
                    }
                    MoodChooseButton(selectedButtonIndex: selection, index: 3, title: "üôÅ", subTitle: "–ì—Ä—É—Å—Ç–Ω–æ–µ") {
                        selection = 3
                        currentMood = .sad
                        isButtonEnabled = true
                    }
                }
                HStack(spacing: 12) {
                    MoodChooseButton(selectedButtonIndex: selection, index: 4, title: "üò†", subTitle: "–ó–ª–æ–µ") {
                        selection = 4
                        currentMood = .angry
                        isButtonEnabled = true
                    }
                    MoodChooseButton(selectedButtonIndex: selection, index: 5, title: "üò™", subTitle: "–°–æ–Ω–Ω–æ–µ") {
                        selection = 5
                        currentMood = .sleepy
                        isButtonEnabled = true
                    }
                    MoodChooseButton(selectedButtonIndex: selection, index: 6, title: "ü§î", subTitle: "–ó–∞–¥—É–º—á–∏–≤–æ–µ") {
                        selection = 6
                        currentMood = .thoughtful
                        isButtonEnabled = true
                    }
                }
            }
            .padding(.bottom, 38)
            
            Spacer()
            
            SecuredButton(title: "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", isEnabled: isButtonEnabled) {
                switch selection {
                case 0:
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É 1
                    break
                case 1:
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É 2
                    break
                case 2:
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É 3
                    break
                default:
                    break
                }
            }
            .disabled(selection == nil)
        }
        .padding(.horizontal, 28)
        .padding(.vertical)
    }
}

struct StartView_Previews: PreviewProvider {
    static var previews: some View {
        MoodView()
    }
}
